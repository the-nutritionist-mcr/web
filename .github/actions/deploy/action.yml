name: 'deploy'
description: 'Deploys the application'

inputs:
  env-name:
    description: Name of the environment being deployed
    required: true

  url:
    description: The URL of the production application
    required: true

  app-env:
    description: Value of the NX_APP_ENV environment variable
    required: false
    default: 'test'

  aws-access-key-id:
    description: AWS Access Key ID
    required: true

  aws-secret-access-key:
    description: AWS Secret Access Key
    required: true

  do-storybook:
    description: Whether to deploy storybook
    required: false
    default: 'true'

  do-hotswap:
    description: Whether to do hotswap deployments
    required: false
    default: 'false'

  datadog-api-key:
    description: Datadog API Key
    required: true

  datadog-app-id:
    description: Datadog Application Id
    required: true

  datadog-client-token:
    description: Datadog Client Token
    required: true

runs:
  using: 'composite'
  steps:
    - name: Download Dist folder
      uses: actions/download-artifact@v3
      with:
        name: dist-${{ inputs.env-name }}
        path: dist

    - name: Get App Version
      shell: bash
      run: echo "APP_VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: Deploy
      shell: bash
      run: yarn nx deploy --configuration=${{ inputs.env-name }}
      env:
        AWS_ACCESS_KEY_ID: ${{ inputs.aws-access-key-id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws-secret-access-key }}
        AWS_REGION: us-east-1
        DATADOG_API_KEY: ${{ inputs.datadog-api-key }}

    - name: Upload sourcemaps
      shell: bash
      run: yarn datadog-ci sourcemaps upload ./dist/apps/web-app/.next --service=tnm-web --release-version=${{ env.APP_VERSION }} --minified-path-prefix=${{ inputs.url }}/_next
      env:
        DATADOG_API_KEY: ${{ inputs.datadog-api-key }}
        DATADOG_SITE: datadoghq.eu
        DATADOG_API_HOST: api.datadoghq.eu

    # - name: Download Storybook
    #   uses: actions/download-artifact@v3
    #   if: ${{ inputs.do-storybook == 'true' }}
    #   with:
    #     name: storybook
    #     path: storybook

    # - name: Upload Storybook
    #   uses: shallwefootball/s3-upload-action@master
    #   if: ${{ inputs.do-storybook == 'true' }}
    #   with:
    #     aws_key_id: ${{ inputs.aws-access-key-id }}
    #     aws_secret_access_key: ${{ inputs.aws-secret-access-key }}
    #     aws_bucket: ${{ env.BUCKET }}
    #     source_dir: storybook
    #     destination_dir: 'storybook'
