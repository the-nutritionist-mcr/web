name: Test and Deploy
concurrency:
  group: mainline
  cancel-in-progress: true

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'

jobs:
  static-checks:
    name: Run Static Checks
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        project:
          - web-app
          - components
          - authorise-cognito-jwt
          - planner

        target:
          - test
          - lint

    steps:
      - uses: actions/checkout@v2

      - name: Configure node 14
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'yarn'

      - name: Cache Nx
        uses: actions/cache@v2
        with:
          path: node_modules/.cache/nx
          key: ${{ matrix.target }}-${{ matrix.project }}-cache-nx-${{ hashFiles('yarn.lock') }}-${{ github.sha }}
          restore-keys: |
            ${{ matrix.target }}-${{ matrix.project }}-cache-nx-${{ hashFiles('yarn.lock') }}-

      - name: Install Dependencies
        run: yarn install

      - name: Run ${{ matrix.target }}
        run: yarn nx ${{ matrix.target }} ${{ matrix.project }}

  build-next-app:
    name: Build NextJS app
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Configure node 14
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'yarn'

      - name: Cache Nx
        uses: actions/cache@v2
        with:
          path: node_modules/.cache/nx
          key: build-cache-nx-${{ hashFiles('yarn.lock') }}-${{ github.sha }}
          restore-keys: |
            build-cache-nx-${{ hashFiles('yarn.lock') }}-

      - name: Install Dependencies
        run: yarn install

      - name: Run
        run: yarn nx build web-app

  deploy-for-cypress:
    name: Deploy for Cypress
    runs-on: ubuntu-latest
    needs: [build-next-app]

    steps:
      - uses: actions/checkout@v2

      - name: Configure node 14
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'yarn'

      - name: Cache Nx
        uses: actions/cache@v2
        with:
          path: node_modules/.cache/nx
          key: build-cache-nx-${{ hashFiles('yarn.lock') }}-${{ github.sha }}
          restore-keys: |
            build-cache-nx-${{ hashFiles('yarn.lock') }}-

      - name: Install Dependencies
        run: yarn install

      - name: Regenerate build from cache
        run: yarn nx build web-app

      - name: Deploy
        run: yarn nx deploy:cypress web-app
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-west-2

      - name: Get S3 Bucket
        run: echo "UPLOAD_BUCKET=$(cat apps/web-app/app-config.json | jq --raw-output 'keys[] as $k | .[$k] | .StaticsBucket')" >> $GITHUB_ENV

      - name: Upload Next Statics
        uses: shallwefootball/s3-upload-action@master
        with:
          aws_key_id: ${{ secrets.AWS_ACCESS_KEY_ID}}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_bucket: ${{ env.UPLOAD_BUCKET }}
          destination_dir: _next/static
          source_dir: dist/apps/web-app/.next/static

      - name: Upload App Config
        uses: shallwefootball/s3-upload-action@master
        with:
          aws_key_id: ${{ secrets.AWS_ACCESS_KEY_ID}}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_bucket: ${{ env.UPLOAD_BUCKET }}
          source_dir: apps/web-app/app-config.json
          destination_dir: ''



  build-storybook:
    name: Build Storybook
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Configure node 14
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'yarn'

      - name: Cache Nx
        uses: actions/cache@v2
        with:
          path: node_modules/.cache/nx
          key: storybook-cache-nx-${{ hashFiles('yarn.lock') }}-${{ github.sha }}
          restore-keys: |
            storybook-cache-nx-${{ hashFiles('yarn.lock') }}-

      - name: Install Dependencies
        run: yarn install

      - name: Run
        run: yarn nx run components:build-storybook
